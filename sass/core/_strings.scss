// String Utilities


// String Replace
// --------------
/// Replace a substring inside a larger string,
/// or replace the entirety of the string.
/// The function itself is prefixed & should not be used directly,
/// but it's available in all accoutrement maps
/// under the `'str-replace'` alias.
///
/// @access public
/// @group core-utils
/// @example scss
///   // sass treats calc() as a string,
///   // so we can use string-functions to manipulate calc valuesâ€¦
///   $map: (
///     'text-size': calc(1em + 1vw),
///     'large-text': '#text-size' ('str-replace': '1vw' '3vw'),
///   );
///   /*! #{token_get($map, 'large-text')} */
///
/// @param {string | list} $string -
///   The original string (or list of strings) to edit
/// @param {string} $old -
///   A sub-string to replace
/// @param {string} $new -
///   A new sub-string to replace the old
/// @return {string} -
///   Original string, with substring replaced
@function _a_str-replace(
  $string,
  $old,
  $new: null,
  $replace-all: false
) {
  $return: $string;

  @if (type-of($string) == 'list') {
    $return: _a_list-template($string);
    @each $item in $string {
      $item: _a_str-replace($item, $old, $new, $replace-all);
      $return: append($return, $item);
    }
    @return $return;
  }

  $i: str-index($string, $old);
  $n: str-length($old);

  @if $string == $old {
    $return: $new;
  } @else if $i {
    $a: if($i > 1, str-slice($string, 1, $i - 1), '');
    $z: str-slice($string, $i + $n);

    @if $replace-all {
      $z: _a_str-replace($z, $old, $new, true);
    }

    $return: $a + if($new, $new, '') + $z;
  }

  @return $return;
}
@include _a_register-function('_a_str-replace', 'str-replace');
