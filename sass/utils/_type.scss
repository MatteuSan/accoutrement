@use 'sass:meta';
@use 'sass:list';
@use 'throw';

// Error [function]
// ----------------
/// @param {*} $value -
///   The value to check
/// @param {string | list} $valid -
///   A list of valid types to check against
/// @param {string} $origin ['check'] -
///   The origin of this value, for error reporting
/// @param {string} $arg ['$value'] -
///   The origin arg-name, for error reporting
@function error(
  $value,
  $valid,
  $origin: 'type-check',
  $arg: null
) {
  $type: meta.type-of($value);
  $in: if((list.length($valid) > 1), 'in types:', 'a');
  $arg: if($arg, ' `#{$arg}`', '');
  $start: 'Argument#{$arg} must be #{$in} #{$valid};';

  @return throw.error(
    '#{$start} got (#{$type}) `#{$value}`',
    $origin
  );
}

// Check [function]
// ----------------
/// Validate the type of any value
///
/// @since 3.0.0 -
/// - BREAKING: Returns type rather than value
///
/// @param {*} $value -
///   The value to check
/// @param {string | list} $valid -
///   A list of valid types to check against
/// @param {string} $silent [true] -
///   Returns `null` on failure, rather than throwing an error
/// @return {*} -
///   The value type, if it passes the type check
/// @throws `$valid` is not a string or list
/// @throws Type-of `$value` is not considered valid
@function check(
  $value,
  $valid,
  $throw: false
) {
  // validate types
  @if not list.index('list' 'string', meta.type-of($valid)) {
    @return throw.error(
      '`$valid` argument must be a string or list of Sass data types',
      'check'
    );
  }

  // type check
  $type: meta.type-of($value);

  @if list.index($valid, $type) {
    @return $type;
  }

  // error
  @if ($throw) {
    @return error($value, $valid);
  }

  // silent fail
  @return null;
}

@function exclude(
  $value,
  $invalid,
  $throw: false
) {
  // validate types
  @if not list.index('list' 'string', meta.type-of($invalid)) {
    @return throw.error(
      '`$invalid` argument must be a string or list of Sass data types',
      'check'
    );
  }

  // type check
  $type: meta.type-of($value);

  @if list.index($invalid, $type) {
    // error
    @if ($throw) {
      @return error($value, $invalid);
    }

    // silent fail
    @return null;
  }

  @return $type;
}
