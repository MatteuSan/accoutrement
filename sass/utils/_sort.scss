@use 'sass:math';
@use 'sass:list';
@use 'sass:string';
@use 'list' as l;
@use 'string' as s;

// Length Sort
// -----------
/// Sort a list (long-to-short)
/// by the (stringified) length of each item.
///
/// @param {list} $list -
///   Items to sort
/// @return {*} -
///   Sorted list, long to short
@function by-length(
  $list
) {
  // return the same type of list we started withâ€¦
  $less: l.template($list);
  $equal: $less;
  $large: $less;

  @if (list.length($list) > 1) {
    $seed: list.nth($list, math.ceil(list.length($list) / 2));
    $seed-length: string.length(s.force($seed));

    @each $item in $list {
      $item-length: string.length(s.force($item));

      @if ($item-length == $seed-length) {
        $equal: list.append($equal, $item);
      } @else if ($item-length < $seed-length) {
        $less: list.append($less, $item);
      } @else if ($item-length > $seed-length) {
        $large: list.append($large, $item);
      }
    }

    $less: by-length($less);
    $large: by-length($large);

    @return list.join($large, list.join($equal, $less));
  }

  @return $list;
}
